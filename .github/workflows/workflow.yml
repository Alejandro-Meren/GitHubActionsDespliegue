permissions:
   contents: write

name: Lint and Test Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Asegúrate de usar la versión de Node.js que necesitas

      - name: Install dependencies
        run: npm install  # Instala las dependencias necesarias

      - name: Run linter
        run: npm run lint  # Ejecuta el linter

  cypress_job:
    runs-on: ubuntu-latest
    needs: linter_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Start server
        run: npm run dev &  # Inicia el servidor en segundo plano

      - name: Wait for server to be ready
        run: |
          npx wait-on http://localhost:3000  # Asegúrate de que el servidor esté listo antes de ejecutar Cypress

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5

      - name: Save Cypress results
        run: echo "$(cat cypress/results.txt)" > result.txt

      - name: Upload result artifact
        uses: actions/upload-artifact@v3
        with:
          name: cypress-result
          path: result.txt

  add_badge_job:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del codi
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Obtenir artefactes (resultats de Cypress)
      - name: Retrieve Cypress Test Artifacts
        uses: actions/download-artifact@v2
        with:
          name: cypress-test-results
          path: ./artifacts

      # 3. Generar output a partir del resultat de Cypress
      - name: Generate Output from Cypress Result
        id: set-output
        run: echo "::set-output name=cypress_outcome::$(cat ./artifacts/result.txt)"

      # 4. Executar l'acció personalitzada per afegir el badge
      - name: Add Badge to README
        uses: ./.github/actions/memes
        with:
          cypress_outcome: ${{ steps.set-output.outputs.cypress_outcome }}

      # 5. Cometre i pujar els canvis al README
      - name: Commit and Push Changes to README
        uses: EndBug/add-and-commit@v7
        with:
          author_name: "GitHub Actions"
          author_email: "actions@github.com"
          message: "Afegir badge de Cypress"
          add: "README.md"

  deploy_job:
    runs-on: ubuntu-latest
    needs:
      - add_badge_job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' 

      - name: Install dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Desplegar en Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel --prod --token=$VERCEL_TOKEN --yes
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod --confirm"  # Agregar --confirm para evitar la solicitud interactiva
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}

          notification_job:
   needs: [linter_job, cypress_job, add_badge_job, deploy_job]
   runs-on: ubuntu-latest
   steps:
    - name: Install mail utilities
      run: sudo apt-get install -y mailutils

    - name: Send Notification Email
      run: |
        echo "S'ha realitzat un push en la branca main..." | mail -s "Resultat del Workflow" ${{ secrets.EMAIL_SECRET }}