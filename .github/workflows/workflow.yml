# permissions:
#   contents: write

# name: workflow

# on:
#   push:
#     branches:
#       - main
#   # Si también deseas ejecutarlo en pull requests, puedes agregar esta sección
#   pull_request:
#     branches:
#       - main

# jobs:
#   linter_job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install dependencies
#         run: npm install

#       - name: Run Linter
#         run: npm run lint

#   cypress_job:
#     needs: linter_job
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install dependencies
#         run: npm install

#       - name: Run Cypress tests
#         uses: cypress-io/github-action@v6
#         with:
#           start: npm start
#         continue-on-error: true

#       - name: Save Cypress results
#         run: echo "success" > result.txt

#       - name: Upload Cypress results as artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: cypress-results
#           path: result.txt

#   add_badge_job:
#     needs: cypress_job
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Download Cypress results artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: cypress-results

#       - name: Update README with badge
#         run: |
#           OUTCOME=$(cat result.txt)
#           if [ "$OUTCOME" == "success" ]; then
#             BADGE="![Success](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)"
#           else
#             BADGE="![Failure](https://img.shields.io/badge/test-failure-red)"
#           fi
#           echo "\nRESULTAT DELS ÚLTIMS TESTS\n$BADGE" >> README.md

#       - name: Set up Git
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"
#           git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Alejandro-Meren/GitHubActionsDespliegue.git

#       - name: Commit changes
#         run: |
#           git config user.name "github-actions[bot]"
#           git config user.email "alemeco2005@gmail.com"
#           git add README.md
#           git commit -m "Update README with test results badge"
#           git push

#   deploy_job:
#    needs: add_badge_job
#    runs-on: ubuntu-latest
#    steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Deploy to Vercel
#       uses: amondnet/vercel-action@v20
#       with:
#         vercel-token:  ${{ secrets.VERCEL_TOKEN }}
#         vercel-args: "--prod --yes --name githubactionsdespliegue"


#   notification_job:
#    needs: [linter_job, cypress_job, add_badge_job, deploy_job]
#    runs-on: ubuntu-latest
#    steps:
#     - name: Install mail utilities
#       run: sudo apt-get install -y mailutils

#     - name: Send Notification Email
#       run: |
#         echo "S'ha realitzat un push en la branca main..." | mail -s "Resultat del Workflow" ${{ secrets.EMAIL_SECRET }}

name: Lint and Test Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Asegúrate de usar la versión de Node.js que necesitas
    
      - name: Install dependencies
        run: npm install  # Instala las dependencias necesarias
    
      - name: Run linter
        run: npm run lint  # Ejecuta el linter


  cypress_job:
    runs-on: ubuntu-latest
    needs: linter_job
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: npm install
    
    - name: Start server
      run: npm run dev &  # Inicia el servidor en segundo plano
    
    - name: Wait for server to be ready
      run: |
        npx wait-on http://localhost:3000  # Asegúrate de que el servidor esté listo antes de ejecutar Cypress
    
    - name: Run Cypress tests
      uses: cypress-io/github-action@v5

    - name: Save Cypress results
      run: echo "$(cat cypress/results.txt)" > result.txt
    
    - name: Upload result artifact
      uses: actions/upload-artifact@v3
      with:
        name: cypress-result
        path: result.txt


  add_badge_job:
    runs-on: ubuntu-latest
    needs: cypress_job
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Download Cypress result artifact
      uses: actions/download-artifact@v3
      with:
        name: cypress-result
    
    - name: Set Cypress outcome
      id: set-outcome
      run: echo "::set-output name=cypress_outcome::$(cat result.txt)"
    
    name: Update README with badge
    run: |
       OUTCOME=$(cat result.txt)
      if [ "$OUTCOME" == "success" ]; then
       BADGE="![Success](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)"
      else
       BADGE="![Failure](https://img.shields.io/badge/test-failure-red)"
      fi
      echo "\nRESULTAT DELS ÚLTIMS TESTS\n$BADGE" >> README.md
    
    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add README.md
        git commit -m "Update README with Cypress test result badge"
        git push

deploy_job:
  needs: cypress_job
  runs-on: ubuntu-latest
  steps: #step 1
  - name: Checkout code
     uses: actions/checkout@v4 #step 2
  - name: Desplegar en Vercel
    uses: amondnet/vercel-action@v25
    with:
      vercel-token: ${{ secrets.VERCEL_TOKEN }} 
       # github-token: ${{ secrets.GH_TOKEN }} 
      vercel-args: "--prod" #Optional
      vercel-org-id: ${{ secrets.ORG_ID}} 
      vercel-project-id: ${{ secrets.PROJECT_ID}} 
      # working-directory: ../../